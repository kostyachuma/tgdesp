{"version":3,"sources":["webpack:///./src/components/horizontalMenu.ts","webpack:///./src/components/transition.ts","webpack:///./src/helpers/animation.ts","webpack:///./src/lib/appManagers/appStateManager.ts","webpack:///./src/helpers/schedulers.ts","webpack:///./src/lib/rlottie/rlottie.worker.ts","webpack:///./src/lib/lottieLoader.ts","webpack:///./src/helpers/dom/isInDOM.ts","webpack:///./src/pages/pagesManager.ts","webpack:///./src/pages/page.ts","webpack:///./src/components/animationIntersector.ts","webpack:///./src/helpers/number.ts","webpack:///./src/hooks/useHeavyAnimationCheck.ts","webpack:///./src/helpers/dom/whichChild.ts","webpack:///./src/helpers/fastSmoothScroll.ts","webpack:///./src/helpers/dom/findUpAsChild.ts"],"names":["horizontalMenu","tabs","content","onClick","onTransitionEnd","transitionTime","scrollableX","selectTab","dataset","animation","proxy","Proxy","apply","target","that","args","id","animate","undefined","el","querySelector","children","selectTarget","tabContent","canChange","scrollIntoViewNew","parentElement","Static","settings","animationsEnabled","prevId","classList","contains","prev","tagName","toLowerCase","remove","useStripe","indicator","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","style","transform","requestAnimationFrame","add","firstElementChild","addEventListener","e","tab","slideNavigation","prevTabContent","toRight","width","getBoundingClientRect","elements","reverse","filter","offsetWidth","slideTabs","TransitionSlider","type","isHeavy","animationFunction","Transition","once","withAnimationListener","onTransitionEndCallbacks","Map","animationDeferred","from","listenerName","onEndEvent","callback","get","resolve","removeEventListener","clear","overrideFrom","HTMLElement","to","timeout","clearTimeout","window","setTimeout","onTransitionEndCallback","toggle","set","delete","_from","instances","cancelAnimationByKey","key","instance","getAnimationInstance","isCancelled","deferred","animateSingle","tick","then","createAnimationInstance","STATE_VERSION","version","STATE_INIT","allDialogsLoaded","pinnedOrders","contactsList","updates","filters","maxSeenMsgId","stateCreatedTime","Date","now","recentEmoji","topPeersCache","recentSearch","authState","_","hiddenPinnedMessages","messagesTextSize","sendShortcut","autoDownload","contacts","private","groups","channels","autoPlay","gifs","videos","stickers","suggest","loop","emoji","big","themes","name","background","blur","slug","highlightningColor","color","theme","notifications","sound","keepSigned","chatContextMenuHintWasShown","stateId","ALL_KEYS","Object","keys","REFRESH_KEYS","AppStateManager","super","log","neededPeers","singlePeerMap","storages","users","chats","dialogs","storagesResults","storage","this","loadSavedState","loaded","console","time","Promise","storagesKeys","storagesPromises","map","getAll","promises","concat","all","arr","state","i","length","value","pushToState","splice","auth","shift","shiftedWebKAuth","push","values","dcID","baseDcId","date","obj","forEach","idx","dispatchEvent","preserve","state_id","s","r","hasOwnProperty","nightTheme","find","t","missingKey","timeEnd","catch","first","split","direct","setKeyValueToStorage","peerId","limit","has","Set","keepPeerSingle","existsPeerId","size","appStateManager","fastRafCallbacks","fastRaf","currentCallbacks","cb","fastRafConventionalCallbacks","rafPromise","processing","fastRafConventional","fastRafPromise","doubleRaf","Worker_fn","Worker","convert","Math","round","min","max","worker","options","reqId","height","paused","direction","speed","autoplay","group","frames","cachingDelta","skipRatio","_loop","_autoplay","skipDelta","pixelRatio","devicePixelRatio","needUpscale","mediaSizes","isMobile","noCache","Infinity","canvas","document","createElement","context","getContext","clamped","Uint8ClampedArray","imageData","ImageData","methodName","sendQuery","jsonString","setMainLoop","clearPendingRAF","rafId","renderFirstFrame","pause","curFrame","frameCount","requestFrame","stop","play","lottieLoader","onDestroy","frame","frameNo","data","putImageData","err","error","frInterval","delta","frThen","renderFrame2","renderFrame","fps","method","mainLoopForwards","mainLoopBackwards","bind","currentMethod","frameListener","listenerResults","diff","appendChild","defaultListener","onError","onerror","onmessage","event","queryMethodListener","queryMethodArguments","call","message","postMessage","terminate","queryMethod","transfer","arg","ArrayBuffer","buffer","isWebAssemblySupported","loadPromise","reject","workersLimit","players","workers","curWorkerNum","logger","Error","onPlayerLoaded","rlPlayer","debug","onLoad","warn","onFrame","onPlayerError","animationIntersector","getAnimations","checkAnimation","element","player","remain","object","toneIndex","replacements","COLORREPLACEMENTS","checkSmth","smth","ty","k","c","foundReplacement","p","applyTo","iterateIt","it","layer","layers","shapes","shape","params","url","loadLottieWorkers","fetch","res","arrayBuffer","invokeCrypto","str","loadAnimationWorker","assign","animationData","race","newAnimationData","JSON","parse","applyReplacements","stringify","parseInt","container","initPlayer","addAnimation","loadFromData","isInDOM","isConnected","pagesManager","pageId","pagesDiv","getElementById","scrollableDiv","page","onShown","isAuthPage","display","whichChild","pageEl","fastSmoothScroll","className","onFirstMount","onMount","installed","body","setPage","visible","byGroups","lockedGroups","onlyOnePlayableGroup","intersectionLockedGroups","videosLocked","observer","IntersectionObserver","entries","idle","isIDLE","entry","isIntersecting","clearCache","doc","checkAnimations","found","HTMLVideoElement","src","load","findAndSplice","unobserve","observe","blurred","destroy","removeAnimation","animations","refreshGroup","numberThousandSplitter","x","joiner","parts","toString","replace","join","formatBytes","bytes","decimals","dm","floor","parseFloat","pow","toFixed","formatNumber","clamp","v","isAnimating","heavyAnimationPromise","promisesInQueue","dispatchHeavyAnimationEvent","promise","finally","Boolean","perf","performance","_heavyAnimationPromise","isFulfilled","onHeavyAnimationEnd","interruptHeavyAnimation","getHeavyAnimationPromise","handleAnimationStart","handleAnimationEnd","listenerSetter","removeManual","elem","parentNode","previousElementSibling","FocusDirection","position","margin","maxDistance","forceDirection","forceDuration","axis","scrollWithJs","elementRect","containerRect","offsetTop","top","scrollTop","Up","Down","rectStartKey","rectEndKey","sizeKey","scrollSizeKey","scrollPositionKey","elementPosition","elementSize","containerSize","scrollPosition","scrollSize","path","remainingPath","duration","abs","startAt","currentPath","transition","findUpAsChild","parent"],"mappings":"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","file":"2.2ba23fd0abb23e3ae581.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { TransitionSlider } from \"./transition\";\r\nimport { ScrollableX } from \"./scrollable\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { fastRaf } from \"../helpers/schedulers\";\r\nimport { FocusDirection } from \"../helpers/fastSmoothScroll\";\r\nimport findUpAsChild from \"../helpers/dom/findUpAsChild\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\n\r\nexport function horizontalMenu(tabs: HTMLElement, content: HTMLElement, onClick?: (id: number, tabContent: HTMLDivElement, animate: boolean) => void | boolean, onTransitionEnd?: () => void, transitionTime = 250, scrollableX?: ScrollableX) {\r\n  const selectTab = TransitionSlider(content, tabs || content.dataset.animation === 'tabs' ? 'tabs' : 'navigation', transitionTime, onTransitionEnd);\r\n\r\n  if(tabs) {\r\n    const proxy = new Proxy(selectTab, {\r\n      apply: (target, that, args) => {\r\n        const id = +args[0];\r\n        const animate = args[1] !== undefined ? args[1] : true;\r\n  \r\n        const el = (tabs.querySelector(`[data-tab=\"${id}\"]`) || tabs.children[id]) as HTMLElement;\r\n        selectTarget(el, id, animate);\r\n      }\r\n    });\r\n\r\n    const selectTarget = (target: HTMLElement, id: number, animate = true) => {\r\n      const tabContent = content.children[id] as HTMLDivElement;\r\n\r\n      if(onClick) {\r\n        const canChange = onClick(id, tabContent, animate);\r\n        if(canChange !== undefined && !canChange) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if(scrollableX) {\r\n        scrollableX.scrollIntoViewNew(target.parentElement.children[id] as HTMLElement, 'center', undefined, undefined, animate ? undefined : FocusDirection.Static, transitionTime, 'x');\r\n      }\r\n\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        animate = false;\r\n      }\r\n\r\n      const prevId = selectTab.prevId();\r\n      if(target.classList.contains('active') || id === prevId) {\r\n        return false;\r\n      }\r\n      \r\n      const prev = tabs.querySelector(tagName.toLowerCase() + '.active') as HTMLElement;\r\n\r\n      fastRaf(() => {\r\n        prev && prev.classList.remove('active');\r\n      });\r\n      \r\n      // stripe from ZINCHUK\r\n      if(useStripe && prevId !== -1 && animate) {\r\n        fastRaf(() => {\r\n          const indicator = target.querySelector('i')!;\r\n          const currentIndicator = target.parentElement.children[prevId].querySelector('i')!;\r\n    \r\n          currentIndicator.classList.remove('animate');\r\n          indicator.classList.remove('animate');\r\n    \r\n          // We move and resize our indicator so it repeats the position and size of the previous one.\r\n          const shiftLeft = currentIndicator.parentElement.parentElement.offsetLeft - indicator.parentElement.parentElement.offsetLeft;\r\n          const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\r\n          indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\r\n  \r\n          //console.log(`translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`);\r\n    \r\n          requestAnimationFrame(() => {\r\n            // Now we remove the transform to let it animate to its own position and size.\r\n            indicator.classList.add('animate');\r\n            indicator.style.transform = 'none';\r\n          });\r\n        });\r\n      }\r\n      // stripe END\r\n\r\n      fastRaf(() => {\r\n        target.classList.add('active');\r\n      });\r\n      \r\n      selectTab(id, animate);\r\n    };\r\n\r\n    const useStripe = !tabs.classList.contains('no-stripe');\r\n\r\n    //const tagName = tabs.classList.contains('menu-horizontal-div') ? 'BUTTON' : 'LI';\r\n    const tagName = tabs.firstElementChild.tagName;\r\n    tabs.addEventListener('click', function(e) {\r\n      let target = e.target as HTMLElement;\r\n      \r\n      target = findUpAsChild(target, tabs);\r\n      \r\n      //console.log('tabs click:', target);\r\n      \r\n      if(!target) return false;\r\n\r\n      let id: number;\r\n      if(target.dataset.tab) {\r\n        id = +target.dataset.tab;\r\n        if(id === -1) {\r\n          return false;\r\n        }\r\n      } else {\r\n        id = whichChild(target);\r\n      }\r\n\r\n      selectTarget(target, id);\r\n    });\r\n\r\n    return proxy;\r\n  }\r\n  \r\n  return selectTab;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\r\nimport { dispatchHeavyAnimationEvent } from \"../hooks/useHeavyAnimationCheck\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\n\r\nfunction slideNavigation(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\r\n  const width = prevTabContent.getBoundingClientRect().width;\r\n  const elements = [tabContent, prevTabContent];\r\n  if(toRight) elements.reverse();\r\n  elements[0].style.filter = `brightness(80%)`;\r\n  elements[0].style.transform = `translate3d(${-width * .25}px, 0, 0)`;\r\n  elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\r\n  \r\n  tabContent.classList.add('active');\r\n  void tabContent.offsetWidth; // reflow\r\n\r\n  tabContent.style.transform = '';\r\n  tabContent.style.filter = '';\r\n\r\n  return () => {\r\n    prevTabContent.style.transform = prevTabContent.style.filter = '';\r\n  };\r\n}\r\n\r\nfunction slideTabs(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\r\n  // Jolly Cobra's // Workaround for scrollable content flickering during animation.\r\n  // const scrollableContainer = findUpClassName(tabContent, 'scrollable-y');\r\n  // if(scrollableContainer && scrollableContainer.style.overflowY !== 'hidden') {\r\n  //   // const scrollBarWidth = scrollableContainer.offsetWidth - scrollableContainer.clientWidth;\r\n  //   scrollableContainer.style.overflowY = 'hidden';\r\n  //   // scrollableContainer.style.paddingRight = `${scrollBarWidth}px`;\r\n  //   // this.container.classList.add('sliding');\r\n  // }\r\n\r\n  //window.requestAnimationFrame(() => {\r\n    const width = prevTabContent.getBoundingClientRect().width;\r\n    /* tabContent.style.setProperty('--width', width + 'px');\r\n    prevTabContent.style.setProperty('--width', width + 'px');\r\n\r\n    tabContent.classList.add('active'); */\r\n    //void tabContent.offsetWidth; // reflow\r\n    const elements = [tabContent, prevTabContent];\r\n    if(toRight) elements.reverse();\r\n    elements[0].style.transform = `translate3d(${-width}px, 0, 0)`;\r\n    elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\r\n  \r\n    tabContent.classList.add('active');\r\n    void tabContent.offsetWidth; // reflow\r\n  \r\n    tabContent.style.transform = '';\r\n  //});\r\n  \r\n  return () => {\r\n    prevTabContent.style.transform = '';\r\n\r\n    // if(scrollableContainer) {\r\n    //   // Jolly Cobra's // Workaround for scrollable content flickering during animation.\r\n    //   if(isSafari) { // ! safari doesn't respect sticky header, so it flicks when overflow is changing\r\n    //     scrollableContainer.style.display = 'none';\r\n    //   }\r\n\r\n    //   scrollableContainer.style.overflowY = '';\r\n\r\n    //   if(isSafari) {\r\n    //     void scrollableContainer.offsetLeft; // reflow\r\n    //     scrollableContainer.style.display = '';\r\n    //   }\r\n\r\n    //   // scrollableContainer.style.paddingRight = '0';\r\n    //   // this.container.classList.remove('sliding');\r\n    // }\r\n  };\r\n}\r\n\r\nexport const TransitionSlider = (\r\n  content: HTMLElement, \r\n  type: 'tabs' | 'navigation' | 'zoom-fade' | 'slide-fade' | 'none'/*  | 'counter' */, \r\n  transitionTime: number, \r\n  onTransitionEnd?: (id: number) => void, \r\n  isHeavy = true\r\n) => {\r\n  let animationFunction: TransitionFunction = null;\r\n\r\n  switch(type) {\r\n    case 'tabs':\r\n      animationFunction = slideTabs;\r\n      break;\r\n    case 'navigation':\r\n      animationFunction = slideNavigation;\r\n      break;\r\n    /* default:\r\n      break; */\r\n  }\r\n\r\n  content.dataset.animation = type;\r\n  \r\n  return Transition(content, animationFunction, transitionTime, onTransitionEnd, isHeavy);\r\n};\r\n\r\ntype TransitionFunction = (tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) => void | (() => void);\r\n\r\nconst Transition = (\r\n  content: HTMLElement, \r\n  animationFunction: TransitionFunction, \r\n  transitionTime: number, \r\n  onTransitionEnd?: (id: number) => void, \r\n  isHeavy = true,\r\n  once = false,\r\n  withAnimationListener = true\r\n) => {\r\n  const onTransitionEndCallbacks: Map<HTMLElement, Function> = new Map();\r\n  let animationDeferred: CancellablePromise<void>;\r\n  // let animationStarted = 0;\r\n  let from: HTMLElement = null;\r\n\r\n  if(withAnimationListener) {\r\n    const listenerName = animationFunction ? 'transitionend' : 'animationend';\r\n\r\n    const onEndEvent = (e: TransitionEvent | AnimationEvent) => {\r\n      cancelEvent(e);\r\n  \r\n      if((e.target as HTMLElement).parentElement !== content) {\r\n        return;\r\n      }\r\n      \r\n      //console.log('Transition: transitionend', /* content, */ e, selectTab.prevId, performance.now() - animationStarted);\r\n  \r\n      const callback = onTransitionEndCallbacks.get(e.target as HTMLElement);\r\n      if(callback) callback();\r\n  \r\n      if(e.target !== from) {\r\n        return;\r\n      }\r\n  \r\n      if(!animationDeferred && isHeavy) return;\r\n  \r\n      if(animationDeferred) {\r\n        animationDeferred.resolve();\r\n        animationDeferred = undefined;\r\n      }\r\n  \r\n      if(onTransitionEnd) {\r\n        onTransitionEnd(selectTab.prevId());\r\n      }\r\n  \r\n      content.classList.remove('animating', 'backwards', 'disable-hover');\r\n  \r\n      if(once) {\r\n        content.removeEventListener(listenerName, onEndEvent/* , {capture: false} */);\r\n        from = animationDeferred = undefined;\r\n        onTransitionEndCallbacks.clear();\r\n      }\r\n    };\r\n  \r\n    // TODO: check for transition type (transform, etc) using by animationFunction\r\n    content.addEventListener(listenerName, onEndEvent/* , {passive: true, capture: false} */);\r\n  }\r\n\r\n  function selectTab(id: number | HTMLElement, animate = true, overrideFrom?: typeof from) {\r\n    if(overrideFrom) {\r\n      from = overrideFrom;\r\n    }\r\n\r\n    if(id instanceof HTMLElement) {\r\n      id = whichChild(id);\r\n    }\r\n    \r\n    const prevId = selectTab.prevId();\r\n    if(id === prevId) return false;\r\n\r\n    //console.log('selectTab id:', id);\r\n\r\n    const to = content.children[id] as HTMLElement;\r\n\r\n    if(!rootScope.settings.animationsEnabled || prevId === -1) {\r\n      animate = false;\r\n    }\r\n\r\n    if(!withAnimationListener) {\r\n      const timeout = content.dataset.timeout;\r\n      if(timeout !== undefined) {\r\n        clearTimeout(+timeout);\r\n      }\r\n\r\n      delete content.dataset.timeout;\r\n    }\r\n\r\n    if(!animate) {\r\n      if(from) from.classList.remove('active', 'to', 'from');\r\n      else if(to) { // fix instant opening back from closed slider (e.g. instant closening and opening right sidebar)\r\n        const callback = onTransitionEndCallbacks.get(to);\r\n        if(callback) {\r\n          callback();\r\n        }\r\n      }\r\n\r\n      if(to) {\r\n        to.classList.remove('to', 'from');\r\n        to.classList.add('active');\r\n      }\r\n\r\n      content.classList.remove('animating', 'backwards', 'disable-hover');\r\n\r\n      from = to;\r\n\r\n      if(onTransitionEnd) onTransitionEnd(id);\r\n      return;\r\n    }\r\n\r\n    if(!withAnimationListener) {\r\n      content.dataset.timeout = '' + window.setTimeout(() => {\r\n        to.classList.remove('to');\r\n        from && from.classList.remove('from');\r\n        content.classList.remove('animating', 'backwards', 'disable-hover');\r\n        delete content.dataset.timeout;\r\n      }, transitionTime);\r\n    }\r\n\r\n    if(from) {\r\n      from.classList.remove('to');\r\n      from.classList.add('from');\r\n    }\r\n\r\n    content.classList.add('animating'/* , 'disable-hover' */);\r\n    const toRight = prevId < id;\r\n    content.classList.toggle('backwards', !toRight);\r\n\r\n    let onTransitionEndCallback: ReturnType<TransitionFunction>;\r\n    if(!to) {\r\n      //prevTabContent.classList.remove('active');\r\n    } else {\r\n      if(animationFunction) {\r\n        onTransitionEndCallback = animationFunction(to, from, toRight);\r\n      } else {\r\n        to.classList.add('active');\r\n      }\r\n\r\n      to.classList.remove('from');\r\n      to.classList.add('to');\r\n    }\r\n    \r\n    if(to) {\r\n      onTransitionEndCallbacks.set(to, () => {\r\n        to.classList.remove('to');\r\n        onTransitionEndCallbacks.delete(to);\r\n      });\r\n    }\r\n\r\n    if(from/*  && false */) {\r\n      const _from = from;\r\n      const callback = () => {\r\n        _from.classList.remove('active', 'from');\r\n\r\n        if(onTransitionEndCallback) {\r\n          onTransitionEndCallback();\r\n        }\r\n\r\n        onTransitionEndCallbacks.delete(_from);\r\n      };\r\n\r\n      if(to) {\r\n        onTransitionEndCallbacks.set(_from, callback);\r\n      } else {\r\n        const timeout = window.setTimeout(callback, transitionTime);\r\n        onTransitionEndCallbacks.set(_from, () => {\r\n          clearTimeout(timeout);\r\n          onTransitionEndCallbacks.delete(_from);\r\n        });\r\n      }\r\n\r\n      if(isHeavy) {\r\n        if(!animationDeferred) {\r\n          animationDeferred = deferredPromise<void>();\r\n          // animationStarted = performance.now();\r\n        }\r\n  \r\n        dispatchHeavyAnimationEvent(animationDeferred, transitionTime * 2);\r\n      }\r\n    }\r\n    \r\n    from = to;\r\n  }\r\n\r\n  //selectTab.prevId = -1;\r\n  selectTab.prevId = () => from ? whichChild(from) : -1;\r\n  \r\n  return selectTab;\r\n};\r\n\r\nexport default Transition;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's animation.ts\r\n\r\nimport { fastRaf } from './schedulers';\r\nimport { CancellablePromise, deferredPromise } from './cancellablePromise';\r\n\r\ninterface AnimationInstance {\r\n  isCancelled: boolean;\r\n  deferred: CancellablePromise<void>\r\n}\r\n\r\ntype AnimationInstanceKey = any;\r\nconst instances: Map<AnimationInstanceKey, AnimationInstance> = new Map();\r\n\r\nexport function createAnimationInstance(key: AnimationInstanceKey) {\r\n  cancelAnimationByKey(key);\r\n\r\n  const instance: AnimationInstance = {\r\n    isCancelled: false, \r\n    deferred: deferredPromise<void>()\r\n  };\r\n\r\n  instances.set(key, instance);\r\n  instance.deferred.then(() => {\r\n    instances.delete(key);\r\n  });\r\n\r\n  return instance;\r\n}\r\n\r\nexport function getAnimationInstance(key: AnimationInstanceKey) {\r\n  return instances.get(key);\r\n}\r\n\r\nexport function cancelAnimationByKey(key: AnimationInstanceKey) {\r\n  const instance = getAnimationInstance(key);\r\n  if(instance) {\r\n    instance.isCancelled = true;\r\n    instance.deferred.resolve();\r\n  }\r\n}\r\n\r\nexport function animateSingle(tick: Function, key: AnimationInstanceKey, instance?: AnimationInstance) {\r\n  if(!instance) {\r\n    instance = createAnimationInstance(key);\r\n  }\r\n\r\n  fastRaf(() => {\r\n    if(instance.isCancelled) {\r\n      return;\r\n    }\r\n    \r\n    if(tick()) {\r\n      animateSingle(tick, key, instance);\r\n    } else {\r\n      instance.deferred.resolve();\r\n    }\r\n  });\r\n\r\n  return instance.deferred;\r\n}\r\n\r\nexport function animate(tick: Function) {\r\n  fastRaf(() => {\r\n    if(tick()) {\r\n      animate(tick);\r\n    }\r\n  });\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { Dialog } from './appMessagesManager';\nimport type { UserAuth } from '../mtproto/mtproto_config';\nimport type { MyTopPeer, TopPeerType, User } from './appUsersManager';\nimport type { AuthState } from '../../types';\nimport type FiltersStorage from '../storages/filters';\nimport type DialogsStorage from '../storages/dialogs';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport rootScope from '../rootScope';\nimport stateStorage from '../stateStorage';\nimport { logger } from '../logger';\nimport { copy, setDeepProperty, validateInitObject } from '../../helpers/object';\nimport App from '../../config/app';\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\nimport AppStorage from '../storage';\nimport { Chat } from '../../layer';\nimport { IS_MOBILE } from '../../environment/userAgent';\nimport DATABASE_STATE from '../../config/databases/state';\nimport sessionStorage from '../sessionStorage';\nimport { nextRandomUint } from '../../helpers/random';\n\nconst REFRESH_EVERY = 24 * 60 * 60 * 1000; // 1 day\n//const REFRESH_EVERY_WEEK = 24 * 60 * 60 * 1000 * 7; // 7 days\nconst STATE_VERSION = App.version;\n\nexport type Background = {\n  type: 'color' | 'image' | 'default',\n  blur: boolean,\n  highlightningColor?: string,\n  color?: string,\n  slug?: string,\n};\n\nexport type Theme = {\n  name: 'day' | 'night' | 'system',\n  background: Background\n};\n\nexport type State = {\n  allDialogsLoaded: DialogsStorage['allDialogsLoaded'],\n  pinnedOrders: DialogsStorage['pinnedOrders'],\n  contactsList: number[],\n  updates: Partial<{\n    seq: number,\n    pts: number,\n    date: number\n  }>,\n  filters: FiltersStorage['filters'],\n  maxSeenMsgId: number,\n  stateCreatedTime: number,\n  recentEmoji: string[],\n  topPeersCache: {\n    [type in TopPeerType]?: {\n      peers: MyTopPeer[],\n      cachedTime: number\n    }\n  },\n  recentSearch: number[],\n  version: typeof STATE_VERSION,\n  authState: AuthState,\n  hiddenPinnedMessages: {[peerId: string]: number},\n  settings: {\n    messagesTextSize: number,\n    sendShortcut: 'enter' | 'ctrlEnter',\n    animationsEnabled: boolean,\n    autoDownload: {\n      contacts: boolean\n      private: boolean\n      groups: boolean\n      channels: boolean\n    },\n    autoPlay: {\n      gifs: boolean,\n      videos: boolean\n    },\n    stickers: {\n      suggest: boolean,\n      loop: boolean\n    },\n    emoji: {\n      suggest: boolean,\n      big: boolean\n    },\n    background?: Background, // ! DEPRECATED\n    themes: Theme[],\n    theme: Theme['name'],\n    notifications: {\n      sound: boolean\n    },\n    nightTheme?: boolean, // ! DEPRECATED\n  },\n  keepSigned: boolean,\n  chatContextMenuHintWasShown: boolean,\n  stateId: number\n};\n\nexport const STATE_INIT: State = {\n  allDialogsLoaded: {},\n  pinnedOrders: {},\n  contactsList: [],\n  updates: {},\n  filters: {},\n  maxSeenMsgId: 0,\n  stateCreatedTime: Date.now(),\n  recentEmoji: [],\n  topPeersCache: {},\n  recentSearch: [],\n  version: STATE_VERSION,\n  authState: {\n    _: IS_MOBILE ? 'authStateSignIn' : 'authStateSignQr'\n  },\n  hiddenPinnedMessages: {},\n  settings: {\n    messagesTextSize: 16,\n    sendShortcut: 'enter',\n    animationsEnabled: true,\n    autoDownload: {\n      contacts: true,\n      private: true,\n      groups: true,\n      channels: true\n    },\n    autoPlay: {\n      gifs: true,\n      videos: true\n    },\n    stickers: {\n      suggest: true,\n      loop: true\n    },\n    emoji: {\n      suggest: true,\n      big: true\n    },\n    themes: [{\n      name: 'day',\n      background: {\n        type: 'image',\n        blur: false,\n        slug: 'ByxGo2lrMFAIAAAAmkJxZabh8eM', // * new blurred camomile,\n        highlightningColor: 'hsla(85.5319, 36.9171%, 40.402%, 0.4)'\n      }\n    }, {\n      name: 'night',\n      background: {\n        type: 'color',\n        blur: false,\n        color: '#0f0f0f',\n        highlightningColor: 'hsla(0, 0%, 3.82353%, 0.4)'\n      }\n    }],\n    theme: 'system',\n    notifications: {\n      sound: false\n    }\n  },\n  keepSigned: true,\n  chatContextMenuHintWasShown: false,\n  stateId: nextRandomUint(32)\n};\n\nconst ALL_KEYS = Object.keys(STATE_INIT) as any as Array<keyof State>;\n\nconst REFRESH_KEYS = ['contactsList', 'stateCreatedTime',\n  'maxSeenMsgId', 'filters', 'topPeers'] as any as Array<keyof State>;\n\n//const REFRESH_KEYS_WEEK = ['dialogs', 'allDialogsLoaded', 'updates', 'pinnedOrders'] as any as Array<keyof State>;\n\nexport class AppStateManager extends EventListenerBase<{\n  save: (state: State) => Promise<void>,\n  peerNeeded: (peerId: number) => void,\n  peerUnneeded: (peerId: number) => void,\n}> {\n  public static STATE_INIT = STATE_INIT;\n  private loaded: Promise<State>;\n  private log = logger('STATE'/* , LogLevels.error */);\n\n  private state: State;\n\n  private neededPeers: Map<number, Set<string>> = new Map();\n  private singlePeerMap: Map<string, number> = new Map();\n\n  public storages = {\n    users: new AppStorage<Record<number, User>, typeof DATABASE_STATE>(DATABASE_STATE, 'users'),\n    chats: new AppStorage<Record<number, Chat>, typeof DATABASE_STATE>(DATABASE_STATE, 'chats'),\n    dialogs: new AppStorage<Record<number, Dialog>, typeof DATABASE_STATE>(DATABASE_STATE, 'dialogs')\n  };\n\n  public storagesResults: {\n    users: User[],\n    chats: Chat[],\n    dialogs: Dialog[]\n  } = {} as any;\n\n  public storage = stateStorage;\n\n  constructor() {\n    super();\n    this.loadSavedState();\n  }\n\n  public loadSavedState(): Promise<State> {\n    if(this.loaded) return this.loaded;\n    console.time('load state');\n    this.loaded = new Promise((resolve) => {\n      const storagesKeys = Object.keys(this.storages) as Array<keyof AppStateManager['storages']>;\n      const storagesPromises: Promise<any>[] = storagesKeys.map(key => this.storages[key].getAll());\n\n      const promises/* : Promise<any>[] */ = ALL_KEYS.map(key => stateStorage.get(key))\n      .concat(sessionStorage.get('user_auth'), sessionStorage.get('state_id'))\n      .concat(stateStorage.get('user_auth')) // support old webk format\n      .concat(storagesPromises);\n\n      Promise.all(promises).then(async(arr) => {\n        /* const self = this;\n        const skipHandleKeys = new Set(['isProxy', 'filters', 'drafts']);\n        const getHandler = (path?: string) => {\n          return {\n            get(target: any, key: any) {\n              if(key === 'isProxy') {\n                return true;\n              }\n\n              const prop = target[key];\n\n              if(prop !== undefined && !skipHandleKeys.has(key) && !prop.isProxy && typeof(prop) === 'object') {\n                target[key] = new Proxy(prop, getHandler(path || key));\n                return target[key];\n              }\n              \n              return prop;\n            },\n            set(target: any, key: any, value: any) {\n              console.log('Setting', target, `.${key} to equal`, value, path);\n          \n              target[key] = value;\n\n              // @ts-ignore\n              self.pushToState(path || key, path ? self.state[path] : value, false);\n\n              return true;\n            }\n          };\n        }; */\n\n        let state: State = this.state = {} as any;\n\n        // ! then can't store false values\n        for(let i = 0, length = ALL_KEYS.length; i < length; ++i) {\n          const key = ALL_KEYS[i];\n          const value = arr[i];\n          if(value !== undefined) {\n            // @ts-ignore\n            state[key] = value;\n          } else {\n            this.pushToState(key, copy(STATE_INIT[key]));\n          }\n        }\n\n        arr.splice(0, ALL_KEYS.length);\n\n        // * Read auth\n        let auth = arr.shift() as UserAuth | number;\n        const stateId = arr.shift() as number;\n        const shiftedWebKAuth = arr.shift() as UserAuth | number;\n        if(!auth && shiftedWebKAuth) { // support old webk auth\n          auth = shiftedWebKAuth;\n          const keys: string[] = ['dc', 'server_time_offset', 'xt_instance'];\n          for(let i = 1; i <= 5; ++i) {\n            keys.push(`dc${i}_server_salt`);\n            keys.push(`dc${i}_auth_key`);\n          }\n\n          const values = await Promise.all(keys.map(key => stateStorage.get(key as any)));\n          keys.push('user_auth');\n          values.push(typeof(auth) === 'number' ? {dcID: values[0] || App.baseDcId, date: Date.now() / 1000 | 0, id: auth} as UserAuth : auth);\n\n          let obj: any = {};\n          keys.forEach((key, idx) => {\n            obj[key] = values[idx];\n          });\n\n          await sessionStorage.set(obj);\n        }\n        \n        /* if(!auth) { // try to read Webogram's session from localStorage\n          try {\n            const keys = Object.keys(localStorage);\n            for(let i = 0; i < keys.length; ++i) {\n              const key = keys[i];\n              let value: any;\n              try {\n                value = localStorage.getItem(key);\n                value = JSON.parse(value);\n              } catch(err) {\n                //console.error(err);\n              }\n\n              sessionStorage.set({\n                [key as any]: value\n              });\n            }\n\n            auth = sessionStorage.getFromCache('user_auth');\n          } catch(err) {\n            this.log.error('localStorage import error', err);\n          }\n        } */\n\n        if(auth) {\n          // ! Warning ! DON'T delete this\n          state.authState = {_: 'authStateSignedIn'};\n          rootScope.dispatchEvent('user_auth', typeof(auth) === 'number' ? {dcID: 0, date: Date.now() / 1000 | 0, id: auth} : auth); // * support old version\n        }\n\n        // * Read storages\n        for(let i = 0, length = storagesKeys.length; i < length; ++i) {\n          this.storagesResults[storagesKeys[i]] = arr[i] as any;\n        }\n\n        arr.splice(0, storagesKeys.length);\n\n        if(state.stateId !== stateId) {\n          if(stateId !== undefined) {\n            const preserve: Map<keyof State, State[keyof State]> = new Map([\n              ['authState', undefined],\n              ['stateId', undefined]\n            ]);\n  \n            preserve.forEach((_, key) => {\n              preserve.set(key, copy(state[key]));\n            });\n  \n            state = this.state = copy(STATE_INIT);\n  \n            preserve.forEach((value, key) => {\n              // @ts-ignore\n              state[key] = value;\n            });\n\n            for(const key in this.storagesResults) {\n              this.storagesResults[key as keyof AppStateManager['storagesResults']].length = 0;\n            }\n\n            this.storage.set(state);\n          }\n\n          await sessionStorage.set({\n            state_id: state.stateId\n          });\n        }\n\n        const time = Date.now();\n        if((state.stateCreatedTime + REFRESH_EVERY) < time) {\n          if(DEBUG) {\n            this.log('will refresh state', state.stateCreatedTime, time);\n          }\n\n          const r = (keys: typeof REFRESH_KEYS) => {\n            keys.forEach(key => {\n              this.pushToState(key, copy(STATE_INIT[key]));\n  \n              // @ts-ignore\n              const s = this.storagesResults[key];\n              if(s && s.length) {\n                s.length = 0;\n              }\n            });\n          };\n          \n          r(REFRESH_KEYS);\n\n          /* if((state.stateCreatedTime + REFRESH_EVERY_WEEK) < time) {\n            if(DEBUG) {\n              this.log('will refresh updates');\n            }\n\n            r(REFRESH_KEYS_WEEK);\n          } */\n        }\n        \n        //state = this.state = new Proxy(state, getHandler());\n\n        // * support old version\n        if(!state.settings.hasOwnProperty('theme') && state.settings.hasOwnProperty('nightTheme')) {\n          state.settings.theme = state.settings.nightTheme ? 'night' : 'day';\n          this.pushToState('settings', state.settings);\n        }\n\n        // * support old version\n        if(!state.settings.hasOwnProperty('themes') && state.settings.background) {\n          state.settings.themes = copy(STATE_INIT.settings.themes);\n          const theme = state.settings.themes.find(t => t.name === state.settings.theme);\n          if(theme) {\n            theme.background = state.settings.background;\n            this.pushToState('settings', state.settings);\n          }\n        }\n\n        validateInitObject(STATE_INIT, state, (missingKey) => {\n          // @ts-ignore\n          this.pushToState(missingKey, state[missingKey]);\n        });\n\n        if(state.version !== STATE_VERSION) {\n          this.pushToState('version', STATE_VERSION);\n        }\n\n        // ! probably there is better place for it\n        rootScope.settings = state.settings;\n\n        if(DEBUG) {\n          this.log('state res', state, copy(state));\n        }\n        \n        //return resolve();\n\n        console.timeEnd('load state');\n        resolve(state);\n      }).catch(resolve);\n    });\n\n    return this.loaded;\n  }\n\n  public getState() {\n    return this.state === undefined ? this.loadSavedState() : Promise.resolve(this.state);\n  }\n\n  public setByKey(key: string, value: any) {\n    setDeepProperty(this.state, key, value);\n    rootScope.dispatchEvent('settings_updated', {key, value});\n\n    const first = key.split('.')[0];\n    // @ts-ignore\n    this.pushToState(first, this.state[first]);\n  }\n\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true) {\n    if(direct) {\n      this.state[key] = value;\n    }\n\n    this.setKeyValueToStorage(key, value);\n  }\n\n  public setKeyValueToStorage<T extends keyof State>(key: T, value: State[T] = this.state[key]) {\n    this.storage.set({\n      [key]: value\n    });\n  }\n\n  public requestPeer(peerId: number, type: string, limit?: number) {\n    let set = this.neededPeers.get(peerId);\n    if(set && set.has(type)) {\n      return;\n    }\n\n    if(!set) {\n      set = new Set();\n      this.neededPeers.set(peerId, set);\n    }\n\n    set.add(type);\n    this.dispatchEvent('peerNeeded', peerId);\n\n    if(limit !== undefined) {\n      this.keepPeerSingle(peerId, type);\n    }\n  }\n\n  public isPeerNeeded(peerId: number) {\n    return this.neededPeers.has(peerId);\n  }\n\n  public keepPeerSingle(peerId: number, type: string) {\n    const existsPeerId = this.singlePeerMap.get(type);\n    if(existsPeerId && existsPeerId !== peerId && this.neededPeers.has(existsPeerId)) {\n      const set = this.neededPeers.get(existsPeerId);\n      set.delete(type);\n\n      if(!set.size) {\n        this.neededPeers.delete(existsPeerId);\n        this.dispatchEvent('peerUnneeded', existsPeerId);\n      }\n    }\n\n    if(peerId) {\n      this.singlePeerMap.set(type, peerId);\n    } else {\n      this.singlePeerMap.delete(type);\n    }\n  }\n\n  /* public resetState() {\n    for(let i in this.state) {\n      // @ts-ignore\n      this.state[i] = false;\n    }\n    sessionStorage.set(this.state).then(() => {\n      location.reload();\n    });\n  } */\n}\n\n//console.trace('appStateManager include');\n\nconst appStateManager = new AppStateManager();\nMOUNT_CLASS_TO.appStateManager = appStateManager;\nexport default appStateManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's schedulers\r\nimport { NoneToVoidFunction } from \"../types\";\r\n\r\n/*\r\nexport function throttleWithTickEnd<F extends AnyToVoidFunction>(fn: F) {\r\n  return throttleWith(onTickEnd, fn);\r\n}\r\n\r\nexport function throttleWithNow<F extends AnyToVoidFunction>(fn: F) {\r\n  return throttleWith(runNow, fn);\r\n}\r\n\r\nexport function onTickEnd(cb: NoneToVoidFunction) {\r\n  Promise.resolve().then(cb);\r\n}\r\n\r\nfunction runNow(fn: NoneToVoidFunction) {\r\n  fn();\r\n} */\r\n\r\nlet fastRafCallbacks: NoneToVoidFunction[] | undefined;\r\nexport function fastRaf(callback: NoneToVoidFunction) {\r\n  if(!fastRafCallbacks) {\r\n    fastRafCallbacks = [callback];\r\n\r\n    requestAnimationFrame(() => {\r\n      const currentCallbacks = fastRafCallbacks!;\r\n      fastRafCallbacks = undefined;\r\n      currentCallbacks.forEach((cb) => cb());\r\n    });\r\n  } else {\r\n    fastRafCallbacks.push(callback);\r\n  }\r\n}\r\n\r\nlet fastRafConventionalCallbacks: NoneToVoidFunction[] | undefined, processing = false;\r\nexport function fastRafConventional(callback: NoneToVoidFunction) {\r\n  if(!fastRafConventionalCallbacks) {\r\n    fastRafConventionalCallbacks = [callback];\r\n\r\n    requestAnimationFrame(() => {\r\n      processing = true;\r\n      for(let i = 0; i < fastRafConventionalCallbacks.length; ++i) {\r\n        fastRafConventionalCallbacks[i]();\r\n      }\r\n\r\n      fastRafConventionalCallbacks = undefined;\r\n      processing = false;\r\n    });\r\n  } else if(processing) {\r\n    callback();\r\n  } else {\r\n    fastRafConventionalCallbacks.push(callback);\r\n  }\r\n}\r\n\r\nlet rafPromise: Promise<DOMHighResTimeStamp>;\r\nexport function fastRafPromise() {\r\n  if(rafPromise) return rafPromise;\r\n\r\n  rafPromise = new Promise(requestAnimationFrame);\r\n  rafPromise.then(() => {\r\n    rafPromise = undefined;\r\n  });\r\n\r\n  return rafPromise;\r\n}\r\n\r\nexport function doubleRaf() {\r\n  return new Promise<void>((resolve) => {\r\n    fastRaf(() => {\r\n      fastRaf(resolve);\r\n    });\r\n  });\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"rlottie.worker.6777ef401e7048467332.bundle.worker.js\");\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport RLottieWorker from 'worker-loader!./rlottie/rlottie.worker';\r\nimport animationIntersector from \"../components/animationIntersector\";\r\nimport { MOUNT_CLASS_TO } from '../config/debug';\r\nimport EventListenerBase from \"../helpers/eventListenerBase\";\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { clamp } from '../helpers/number';\r\nimport { pause } from '../helpers/schedulers/pause';\r\nimport { IS_ANDROID, IS_APPLE, IS_APPLE_MOBILE, IS_SAFARI } from \"../environment/userAgent\";\r\nimport { logger, LogTypes } from \"./logger\";\r\nimport apiManager from \"./mtproto/mtprotoworker\";\r\n\r\nlet convert = (value: number) => {\r\n\treturn Math.round(Math.min(Math.max(value, 0), 1) * 255);\r\n};\r\n\r\ntype RLottiePlayerListeners = 'enterFrame' | 'ready' | 'firstFrame' | 'cached';\r\ntype RLottieOptions = {\r\n  container: HTMLElement, \r\n  autoplay?: boolean, \r\n  animationData: string, \r\n  loop?: boolean, \r\n  width?: number,\r\n  height?: number,\r\n  group?: string,\r\n  noCache?: true,\r\n  needUpscale?: true,\r\n  skipRatio?: number\r\n};\r\n\r\nexport class RLottiePlayer extends EventListenerBase<{\r\n  enterFrame: (frameNo: number) => void,\r\n  ready: () => void,\r\n  firstFrame: () => void,\r\n  cached: () => void\r\n}> {\r\n  public static reqId = 0;\r\n\r\n  public reqId = 0;\r\n  public curFrame: number;\r\n  public frameCount: number;\r\n  public fps: number;\r\n  public skipDelta: number;\r\n\r\n  public worker: QueryableWorker;\r\n  \r\n  public width = 0;\r\n  public height = 0;\r\n\r\n  public el: HTMLElement;\r\n  public canvas: HTMLCanvasElement;\r\n  public context: CanvasRenderingContext2D;\r\n\r\n  public paused = true;\r\n  //public paused = false;\r\n  public direction = 1;\r\n  public speed = 1;\r\n  public autoplay = true;\r\n  public _autoplay: boolean; // ! will be used to store original value for settings.stickers.loop\r\n  public loop = true;\r\n  public _loop: boolean; // ! will be used to store original value for settings.stickers.loop\r\n  public group = '';\r\n\r\n  private frInterval: number;\r\n  private frThen: number;\r\n  private rafId: number;\r\n\r\n  //private caching = false;\r\n  //private removed = false;\r\n\r\n  private frames: {[frameNo: string]: Uint8ClampedArray} = {};\r\n  public imageData: ImageData;\r\n  public clamped: Uint8ClampedArray;\r\n  public cachingDelta = 0;\r\n\r\n  //private playedTimes = 0;\r\n\r\n  private currentMethod: RLottiePlayer['mainLoopForwards'] | RLottiePlayer['mainLoopBackwards'];\r\n  private frameListener: () => void;\r\n\r\n  constructor({el, worker, options}: {\r\n    el: HTMLElement,\r\n    worker: QueryableWorker,\r\n    options: RLottieOptions\r\n  }) {\r\n    super(true);\r\n\r\n    this.reqId = ++RLottiePlayer['reqId'];\r\n    this.el = el;\r\n    this.worker = worker;\r\n\r\n    for(let i in options) {\r\n      if(this.hasOwnProperty(i)) {\r\n        // @ts-ignore\r\n        this[i] = options[i];\r\n      }\r\n    }\r\n\r\n    this._loop = this.loop;\r\n    this._autoplay = this.autoplay;\r\n\r\n    // * Skip ratio (30fps)\r\n    let skipRatio: number;\r\n    if(options.skipRatio !== undefined) skipRatio = options.skipRatio;\r\n    else if((IS_ANDROID || IS_APPLE_MOBILE || (IS_APPLE && !IS_SAFARI)) && this.width < 100 && this.height < 100) {\r\n      skipRatio = 0.5;\r\n    }\r\n\r\n    this.skipDelta = skipRatio !== undefined ? 1 / skipRatio | 0 : 1;\r\n\r\n    //options.needUpscale = true;\r\n\r\n    // * Pixel ratio\r\n    //const pixelRatio = window.devicePixelRatio;\r\n    const pixelRatio = clamp(window.devicePixelRatio, 1, 2);\r\n    if(pixelRatio > 1) {\r\n      //this.cachingEnabled = true;//this.width < 100 && this.height < 100;\r\n      if(options.needUpscale) {\r\n        this.width = Math.round(this.width * pixelRatio);\r\n        this.height = Math.round(this.height * pixelRatio);\r\n      } else if(pixelRatio > 1) {\r\n        if(this.width > 100 && this.height > 100) {\r\n          if(IS_APPLE || !mediaSizes.isMobile) {\r\n            /* this.width = Math.round(this.width * (pixelRatio - 1));\r\n            this.height = Math.round(this.height * (pixelRatio - 1)); */\r\n            this.width = Math.round(this.width * pixelRatio);\r\n            this.height = Math.round(this.height * pixelRatio);\r\n          } else if(pixelRatio > 2.5) {\r\n            this.width = Math.round(this.width * (pixelRatio - 1.5));\r\n            this.height = Math.round(this.height * (pixelRatio - 1.5));\r\n          }\r\n        } else {\r\n          this.width = Math.round(this.width * Math.max(1.5, pixelRatio - 1.5));\r\n          this.height = Math.round(this.height * Math.max(1.5, pixelRatio - 1.5));\r\n        }\r\n      }\r\n    }\r\n\r\n    //options.noCache = true;\r\n    \r\n    // * Cache frames params\r\n    if(!options.noCache/*  && false */) {\r\n      // проверка на размер уже после скейлинга, сделано для попапа и сайдбара, где стикеры 80х80 и 68х68, туда нужно 75%\r\n      if(IS_APPLE && this.width > 100 && this.height > 100) {\r\n        this.cachingDelta = 2; //2 // 50%\r\n      } else if(this.width < 100 && this.height < 100) {\r\n        this.cachingDelta = Infinity; // 100%\r\n      } else {\r\n        this.cachingDelta = 4; // 75%\r\n      }\r\n    }\r\n    \r\n    // this.cachingDelta = Infinity;\r\n    // if(isApple) {\r\n    //   this.cachingDelta = 0; //2 // 50%\r\n    // }\r\n\r\n    /* this.width *= 0.8;\r\n    this.height *= 0.8; */\r\n    \r\n    //console.log(\"RLottiePlayer width:\", this.width, this.height, options);\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.classList.add('rlottie');\r\n    this.canvas.width = this.width;\r\n    this.canvas.height = this.height;\r\n    this.context = this.canvas.getContext('2d');\r\n\r\n    this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\r\n    this.imageData = new ImageData(this.width, this.height);\r\n  }\r\n\r\n  public clearCache() {\r\n    this.frames = {};\r\n  }\r\n\r\n  public sendQuery(methodName: string, ...args: any[]) {\r\n    //console.trace('RLottie sendQuery:', methodName);\r\n    this.worker.sendQuery(methodName, this.reqId, ...args);\r\n  }\r\n\r\n  public loadFromData(jsonString: string) {\r\n    this.sendQuery('loadFromData', jsonString, this.width, this.height/* , this.canvas.transferControlToOffscreen() */);\r\n  }\r\n\r\n  public play() {\r\n    if(!this.paused) return;\r\n\r\n    //return;\r\n\r\n    //console.log('RLOTTIE PLAY' + this.reqId);\r\n\r\n    this.paused = false;\r\n    this.setMainLoop();\r\n  }\r\n\r\n  public pause(clearPendingRAF = true) {\r\n    if(this.paused) return;\r\n\r\n    this.paused = true;\r\n    if(clearPendingRAF) {\r\n      clearTimeout(this.rafId);\r\n    }\r\n    //window.cancelAnimationFrame(this.rafId);\r\n  }\r\n\r\n  public stop(renderFirstFrame = true) {\r\n    this.pause();\r\n\r\n    this.curFrame = this.direction === 1 ? 0 : this.frameCount;\r\n    if(renderFirstFrame) {\r\n      this.requestFrame(this.curFrame);\r\n      //this.sendQuery('renderFrame', this.curFrame);\r\n    }\r\n  }\r\n\r\n  public restart() {\r\n    this.stop(false);\r\n    this.play();\r\n  }\r\n\r\n  public setSpeed(speed: number) {\r\n    this.speed = speed;\r\n\r\n    if(!this.paused) {\r\n      this.setMainLoop();\r\n    }\r\n  }\r\n\r\n  public setDirection(direction: number) {\r\n    this.direction = direction;\r\n    \r\n    if(!this.paused) {\r\n      this.setMainLoop();\r\n    }\r\n  }\r\n\r\n  public remove() {\r\n    //alert('remove');\r\n    lottieLoader.onDestroy(this.reqId);\r\n    this.pause();\r\n    this.sendQuery('destroy');\r\n    //this.removed = true;\r\n  }\r\n\r\n  public renderFrame2(frame: Uint8ClampedArray, frameNo: number) {\r\n    /* this.setListenerResult('enterFrame', frameNo);\r\n    return; */\r\n\r\n    try {\r\n      this.imageData.data.set(frame);\r\n      \r\n      //this.context.putImageData(new ImageData(frame, this.width, this.height), 0, 0);\r\n      //let perf = performance.now();\r\n      this.context.putImageData(this.imageData, 0, 0);\r\n      //console.log('renderFrame2 perf:', performance.now() - perf);\r\n    } catch(err) {\r\n      console.error('RLottiePlayer renderFrame error:', err/* , frame */, this.width, this.height);\r\n      this.autoplay = false;\r\n      this.pause();\r\n      return;\r\n    }\r\n    \r\n    //console.log('set result enterFrame', frameNo);\r\n    this.dispatchEvent('enterFrame', frameNo);\r\n  }\r\n\r\n  public renderFrame(frame: Uint8ClampedArray, frameNo: number) {\r\n    //console.log('renderFrame', frameNo, this);\r\n    if(this.cachingDelta && (frameNo % this.cachingDelta || !frameNo) && !this.frames[frameNo]) {\r\n      this.frames[frameNo] = new Uint8ClampedArray(frame);//frame;\r\n    }\r\n\r\n    /* if(!this.listenerResults.hasOwnProperty('cached')) {\r\n      this.setListenerResult('enterFrame', frameNo);\r\n      if(frameNo === (this.frameCount - 1)) {\r\n        this.setListenerResult('cached');\r\n      }\r\n\r\n      return;\r\n    } */\r\n\r\n    if(this.frInterval) {\r\n      const now = Date.now(), delta = now - this.frThen;\r\n      //console.log(`renderFrame delta${this.reqId}:`, this, delta, this.frInterval);\r\n\r\n      if(delta < 0) {\r\n        if(this.rafId) clearTimeout(this.rafId);\r\n        return this.rafId = window.setTimeout(() => {\r\n          this.renderFrame2(frame, frameNo);\r\n        }, this.frInterval > -delta ? -delta % this.frInterval : this.frInterval);\r\n        //await new Promise((resolve) => setTimeout(resolve, -delta % this.frInterval));\r\n      }\r\n    }\r\n\r\n    this.renderFrame2(frame, frameNo);\r\n  }\r\n\r\n  public requestFrame(frameNo: number) {\r\n    if(this.frames[frameNo]) {\r\n      this.renderFrame(this.frames[frameNo], frameNo);\r\n    } else if(IS_SAFARI) {\r\n      this.sendQuery('renderFrame', frameNo);\r\n    } else {\r\n      if(!this.clamped.length) { // fix detached\r\n        this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\r\n      }\r\n      \r\n      this.sendQuery('renderFrame', frameNo, this.clamped);\r\n    }\r\n  }\r\n\r\n  private mainLoopForwards() {\r\n    const frame = (this.curFrame + this.skipDelta) >= this.frameCount ? this.curFrame = 0 : this.curFrame += this.skipDelta;\r\n    //console.log('mainLoopForwards', this.curFrame, this.skipDelta, frame);\r\n\r\n    this.requestFrame(frame);\r\n    if((frame + this.skipDelta) >= this.frameCount) {\r\n      //this.playedTimes++;\r\n\r\n      if(!this.loop) {\r\n        this.pause(false);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n  \r\n  private mainLoopBackwards() {\r\n    const frame = (this.curFrame - this.skipDelta) < 0 ? this.curFrame = this.frameCount - 1 : this.curFrame -= this.skipDelta;\r\n    //console.log('mainLoopBackwards', this.curFrame, this.skipDelta, frame);\r\n\r\n    this.requestFrame(frame);\r\n    if((frame - this.skipDelta) < 0) {\r\n      //this.playedTimes++;\r\n\r\n      if(!this.loop) {\r\n        this.pause(false);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public setMainLoop() {\r\n    //window.cancelAnimationFrame(this.rafId);\r\n    clearTimeout(this.rafId);\r\n\r\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\r\n    this.frThen = Date.now() - this.frInterval;\r\n\r\n    //console.trace('setMainLoop', this.frInterval, this.direction, this, JSON.stringify(this.listenerResults), this.listenerResults);\r\n\r\n    const method = (this.direction === 1 ? this.mainLoopForwards : this.mainLoopBackwards).bind(this);\r\n    this.currentMethod = method;\r\n    //this.frameListener && this.removeListener('enterFrame', this.frameListener);\r\n\r\n    //setTimeout(() => {\r\n      //this.addListener('enterFrame', this.frameListener);\r\n    //}, 0);\r\n\r\n    if(this.frameListener && this.listenerResults.hasOwnProperty('enterFrame')) {\r\n      this.frameListener();\r\n    }\r\n  \r\n    //this.mainLoop(method);\r\n    //this.r(method);\r\n    //method();\r\n  }\r\n\r\n  public async onLoad(frameCount: number, fps: number) {\r\n    this.curFrame = this.direction === 1 ? 0 : frameCount - 1;\r\n    this.frameCount = frameCount;\r\n    this.fps = fps;\r\n\r\n    // * Handle 30fps stickers if 30fps set\r\n    if(this.fps < 60 && this.skipDelta !== 1) {\r\n      const diff = 60 / fps;\r\n      this.skipDelta = this.skipDelta / diff | 0;\r\n    }\r\n\r\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\r\n    this.frThen = Date.now() - this.frInterval;\r\n    //this.sendQuery('renderFrame', 0);\r\n    \r\n    // Кешировать сразу не получится, рендер стикера (тайгер) занимает 519мс, \r\n    // если рендерить 75% с получением каждого кадра из воркера, будет 475мс, т.е. при 100% было бы 593мс, потеря на передаче 84мс. \r\n\r\n    /* console.time('cache' + this.reqId);\r\n    for(let i = 0; i < frameCount; ++i) {\r\n      //if(this.removed) return;\r\n      \r\n      if(i % 4) {\r\n        await new Promise((resolve) => {\r\n          delete this.listenerResults.enterFrame;\r\n          this.addListener('enterFrame', resolve, true);\r\n          this.requestFrame(i);\r\n        });  \r\n      }\r\n    }\r\n    \r\n    console.timeEnd('cache' + this.reqId); */\r\n    //console.log('cached');\r\n    /* this.el.innerHTML = '';\r\n    this.el.append(this.canvas);\r\n    return; */\r\n\r\n    this.requestFrame(0);\r\n    this.dispatchEvent('ready');\r\n    this.addEventListener('enterFrame', () => {\r\n      this.dispatchEvent('firstFrame');\r\n\r\n      this.el.appendChild(this.canvas);\r\n\r\n      //console.log('enterFrame firstFrame');\r\n \r\n      //let lastTime = this.frThen;\r\n      this.frameListener = () => {\r\n        if(this.paused) {\r\n          return;\r\n        }\r\n\r\n        const time = Date.now();\r\n        //console.log(`enterFrame handle${this.reqId}`, time, (time - lastTime), this.frInterval);\r\n        /* if(Math.round(time - lastTime + this.frInterval * 0.25) < Math.round(this.frInterval)) {\r\n          return;\r\n        } */\r\n\r\n        //lastTime = time;\r\n\r\n        this.frThen = time + this.frInterval;\r\n        const canContinue = this.currentMethod();\r\n        if(!canContinue && !this.loop && this.autoplay) {\r\n          this.autoplay = false;\r\n        }\r\n      };\r\n\r\n      this.addEventListener('enterFrame', this.frameListener);\r\n    }, {once: true});\r\n  }\r\n}\r\n\r\nclass QueryableWorker extends EventListenerBase<any> {\r\n  constructor(private worker: Worker, private defaultListener: (data: any) => void = () => {}, onError?: (error: any) => void) {\r\n    super();\r\n\r\n    if(onError) {\r\n      this.worker.onerror = onError;\r\n    }\r\n\r\n    this.worker.onmessage = (event) => {\r\n      //return;\r\n      //console.log('worker onmessage', event.data);\r\n      if(event.data instanceof Object &&\r\n        event.data.hasOwnProperty('queryMethodListener') &&\r\n        event.data.hasOwnProperty('queryMethodArguments')) {\r\n        /* if(event.data.queryMethodListener === 'frame') {\r\n          return;\r\n        } */\r\n\r\n        this.dispatchEvent(event.data.queryMethodListener, ...event.data.queryMethodArguments);\r\n      } else {\r\n        this.defaultListener.call(this, event.data);\r\n      }\r\n    };\r\n  }\r\n\r\n  public postMessage(message: any) {\r\n    this.worker.postMessage(message);\r\n  }\r\n\r\n  public terminate() {\r\n    this.worker.terminate();\r\n  }\r\n\r\n  public sendQuery(queryMethod: string, ...args: any[]) {\r\n    if(IS_SAFARI) {\r\n      this.worker.postMessage({\r\n        'queryMethod': queryMethod,\r\n        'queryMethodArguments': args\r\n      });\r\n    } else {\r\n      //const transfer: (ArrayBuffer | OffscreenCanvas)[] = [];\r\n      const transfer: ArrayBuffer[] = [];\r\n      args.forEach(arg => {\r\n        if(arg instanceof ArrayBuffer) {\r\n          transfer.push(arg);\r\n        }\r\n  \r\n        if(arg.buffer && arg.buffer instanceof ArrayBuffer) {\r\n          transfer.push(arg.buffer);\r\n        }\r\n      });\r\n  \r\n      //console.log('transfer', transfer);\r\n      this.worker.postMessage({\r\n        'queryMethod': queryMethod,\r\n        'queryMethodArguments': args\r\n      }, transfer as PostMessageOptions);\r\n    }\r\n  }\r\n}\r\n\r\ntype LottieShape = {\r\n  c: {\r\n    k: number[]\r\n  },\r\n  ty: 'st' | 'fl',\r\n  it?: LottieShape[]\r\n};\r\nclass LottieLoader {\r\n  public isWebAssemblySupported = typeof(WebAssembly) !== 'undefined';\r\n  public loadPromise: Promise<void> = !this.isWebAssemblySupported ? Promise.reject() : undefined;\r\n  public loaded = false;\r\n\r\n  // https://github.com/telegramdesktop/tdesktop/blob/97d8ee75d51874fcb74a9bfadc79f835c82be54a/Telegram/SourceFiles/chat_helpers/stickers_emoji_pack.cpp#L46\r\n  private static COLORREPLACEMENTS = [\r\n    [\r\n      [0xf77e41, 0xcb7b55],\r\n\t\t\t[0xffb139, 0xf6b689],\r\n\t\t\t[0xffd140, 0xffcda7],\r\n\t\t\t[0xffdf79, 0xffdfc5],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0xa45a38],\r\n\t\t\t[0xffb139, 0xdf986b],\r\n\t\t\t[0xffd140, 0xedb183],\r\n\t\t\t[0xffdf79, 0xf4c3a0],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0x703a17],\r\n\t\t\t[0xffb139, 0xab673d],\r\n\t\t\t[0xffd140, 0xc37f4e],\r\n\t\t\t[0xffdf79, 0xd89667],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0x4a2409],\r\n\t\t\t[0xffb139, 0x7d3e0e],\r\n\t\t\t[0xffd140, 0x965529],\r\n\t\t\t[0xffdf79, 0xa96337],\r\n    ],\r\n\r\n    [\r\n\t\t\t[0xf77e41, 0x200f0a],\r\n\t\t\t[0xffb139, 0x412924],\r\n\t\t\t[0xffd140, 0x593d37],\r\n\t\t\t[0xffdf79, 0x63453f],\r\n    ]\r\n  ];\r\n\r\n  private workersLimit = 4;\r\n  private players: {[reqId: number]: RLottiePlayer} = {};\r\n\r\n  private workers: QueryableWorker[] = [];\r\n  private curWorkerNum = 0;\r\n\r\n  private log = logger('LOTTIE', LogTypes.Error);\r\n\r\n  public getAnimation(element: HTMLElement) {\r\n    for(const i in this.players) {\r\n      if(this.players[i].el === element) {\r\n        return this.players[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public setLoop(loop: boolean) {\r\n    for(const i in this.players) {\r\n      const player = this.players[i];\r\n      player.loop = loop;\r\n      player.autoplay = player._autoplay;\r\n    }\r\n  }\r\n\r\n  public loadLottieWorkers() {\r\n    if(this.loadPromise) {\r\n      return this.loadPromise;\r\n    }\r\n\r\n    return this.loadPromise = new Promise((resolve, reject) => {\r\n      let remain = this.workersLimit;\r\n      for(let i = 0; i < this.workersLimit; ++i) {\r\n        const worker = this.workers[i] = new QueryableWorker(new RLottieWorker());\r\n\r\n        worker.addEventListener('ready', () => {\r\n          this.log('worker #' + i + ' ready');\r\n\r\n          worker.addEventListener('frame', this.onFrame);\r\n          worker.addEventListener('loaded', this.onPlayerLoaded);\r\n          worker.addEventListener('error', this.onPlayerError);\r\n\r\n          --remain;\r\n          if(!remain) {\r\n            this.log('workers ready');\r\n            resolve();\r\n            this.loaded = true;\r\n          }\r\n        }, {once: true});\r\n      }\r\n    });\r\n  }\r\n\r\n  private applyReplacements(object: {\r\n    layers: Array<{shapes: LottieShape[]}>\r\n  }, toneIndex: number) {\r\n    const replacements = LottieLoader.COLORREPLACEMENTS[Math.max(toneIndex - 1, 0)];\r\n\r\n    const applyTo = (smth: LottieShape) => {\r\n      const k = smth.c.k;\r\n      const color = convert(k[2]) | (convert(k[1]) << 8) | (convert(k[0]) << 16);\r\n\r\n      const foundReplacement = replacements.find(p => p[0] === color);\r\n      if(foundReplacement) {\r\n        k[0] = ((foundReplacement[1] >> 16) & 255) / 255;\r\n        k[1] = ((foundReplacement[1] >> 8) & 255) / 255;\r\n        k[2] = (foundReplacement[1] & 255) / 255;\r\n      }\r\n\r\n      //console.log('foundReplacement!', foundReplacement, color.toString(16), k);\r\n    };\r\n\r\n    const checkSmth = (smth: LottieShape) => {\r\n      switch(smth.ty) {\r\n        case 'st':\r\n        case 'fl':\r\n          applyTo(smth);\r\n          break;\r\n      }\r\n\r\n      if(smth.hasOwnProperty('it')) {\r\n        iterateIt(smth.it);\r\n      }\r\n    };\r\n\r\n    const iterateIt = (it: LottieShape['it']) => {\r\n      for(const smth of it) {\r\n        checkSmth(smth);\r\n      }\r\n    };\r\n\r\n    try {\r\n      for(const layer of object.layers) {\r\n        if(!layer.shapes) continue;\r\n  \r\n        for(const shape of layer.shapes) {\r\n          if(!shape.it) {\r\n            checkSmth(shape);\r\n            continue;\r\n          }\r\n\r\n          iterateIt(shape.it);\r\n        }\r\n      }\r\n    } catch(err) {\r\n      this.log.warn('cant apply replacements', err, object, toneIndex);\r\n    }\r\n  }\r\n\r\n  public loadAnimationFromURL(params: Omit<RLottieOptions, 'animationData'>, url: string): Promise<RLottiePlayer> {\r\n    if(!this.isWebAssemblySupported) {\r\n      return this.loadPromise as any;\r\n    }\r\n    \r\n    if(!this.loaded) {\r\n      this.loadLottieWorkers();\r\n    }\r\n    \r\n    return fetch(url)\r\n    .then(res => res.arrayBuffer())\r\n    .then(data => apiManager.invokeCrypto('gzipUncompress', data, true))\r\n    /* .then(str => {\r\n      return new Promise<string>((resolve) => setTimeout(() => resolve(str), 2e3));\r\n    }) */\r\n    .then(str => {\r\n      return this.loadAnimationWorker(Object.assign(params, {animationData: str as string/* JSON.parse(str) */, needUpscale: true}));\r\n    });\r\n  }\r\n\r\n  public waitForFirstFrame(player: RLottiePlayer): Promise<void> {\r\n    return Promise.race([\r\n      /* new Promise<void>((resolve) => {\r\n        player.addEventListener('firstFrame', () => {\r\n          setTimeout(() => resolve(), 1500);\r\n        }, true);\r\n      }) */\r\n      new Promise<void>((resolve) => {\r\n        player.addEventListener('firstFrame', resolve, {once: true});\r\n      }),\r\n      pause(2500)\r\n    ]);\r\n  }\r\n\r\n  public async loadAnimationWorker(params: RLottieOptions, group = '', toneIndex = -1): Promise<RLottiePlayer> {\r\n    if(!this.isWebAssemblySupported) {\r\n      return this.loadPromise as any;\r\n    }\r\n    //params.autoplay = true;\r\n\r\n    if(toneIndex >= 1 && toneIndex <= 5) {\r\n      /* params.animationData = copy(params.animationData);\r\n      this.applyReplacements(params.animationData, toneIndex); */\r\n\r\n      const newAnimationData = JSON.parse(params.animationData);\r\n      this.applyReplacements(newAnimationData, toneIndex);\r\n      params.animationData = JSON.stringify(newAnimationData);\r\n    }\r\n\r\n    if(!this.loaded) {\r\n      await this.loadLottieWorkers();\r\n    }\r\n\r\n    if(!params.width || !params.height) {\r\n      params.width = parseInt(params.container.style.width);\r\n      params.height = parseInt(params.container.style.height);\r\n    }\r\n\r\n    if(!params.width || !params.height) {\r\n      throw new Error('No size for sticker!');\r\n    }\r\n\r\n    params.group = group;\r\n\r\n    const player = this.initPlayer(params.container, params);\r\n    animationIntersector.addAnimation(player, group);\r\n\r\n    return player;\r\n  }\r\n\r\n  private onPlayerLoaded = (reqId: number, frameCount: number, fps: number) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(!rlPlayer) {\r\n      this.log.warn('onPlayerLoaded on destroyed player:', reqId, frameCount);\r\n      return;\r\n    }\r\n\r\n    this.log.debug('onPlayerLoaded');\r\n    rlPlayer.onLoad(frameCount, fps);\r\n    //rlPlayer.addListener('firstFrame', () => {\r\n      //animationIntersector.addAnimation(player, group);\r\n    //}, true);\r\n  };\r\n\r\n  private onFrame = (reqId: number, frameNo: number, frame: Uint8ClampedArray) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(!rlPlayer) {\r\n      this.log.warn('onFrame on destroyed player:', reqId, frameNo);\r\n      return;\r\n    }\r\n\r\n    rlPlayer.clamped = frame;\r\n    rlPlayer.renderFrame(frame, frameNo);\r\n  };\r\n\r\n  private onPlayerError = (reqId: number, error: Error) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(rlPlayer) {\r\n      // ! will need refactoring later, this is not the best way to remove the animation\r\n      const animations = animationIntersector.getAnimations(rlPlayer.el);\r\n      animations.forEach(animation => {\r\n        animationIntersector.checkAnimation(animation, true, true);\r\n      });\r\n    }\r\n  };\r\n\r\n  public onDestroy(reqId: number) {\r\n    delete this.players[reqId];\r\n  }\r\n\r\n  public destroyWorkers() {\r\n    this.workers.forEach((worker, idx) => {\r\n      worker.terminate();\r\n      this.log('worker #' + idx + ' terminated');\r\n    });\r\n\r\n    this.log('workers destroyed');\r\n    this.workers.length = 0;\r\n  }\r\n\r\n  private initPlayer(el: HTMLElement, options: RLottieOptions) {\r\n    const rlPlayer = new RLottiePlayer({\r\n      el, \r\n      worker: this.workers[this.curWorkerNum++],\r\n      options\r\n    });\r\n\r\n    this.players[rlPlayer.reqId] = rlPlayer;\r\n    if(this.curWorkerNum >= this.workers.length) {\r\n      this.curWorkerNum = 0;\r\n    }\r\n\r\n    rlPlayer.loadFromData(options.animationData);\r\n\r\n    return rlPlayer;\r\n  }\r\n}\r\n\r\nconst lottieLoader = new LottieLoader();\r\nMOUNT_CLASS_TO.lottieLoader = lottieLoader;\r\nexport default lottieLoader;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n/* export function isInDOM(element: Element, parentNode?: HTMLElement): boolean {\r\n  if(!element) {\r\n    return false;\r\n  }\r\n\r\n  parentNode = parentNode || document.body;\r\n  if(element === parentNode) {\r\n    return true;\r\n  }\r\n  return isInDOM(element.parentNode as HTMLElement, parentNode);\r\n} */\r\nexport default function isInDOM(element: Element): boolean {\r\n  return element?.isConnected;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Page from \"./page\";\r\nimport lottieLoader from \"../lib/lottieLoader\";\r\nimport { horizontalMenu } from \"../components/horizontalMenu\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\n\r\nclass PagesManager {\r\n  private pageId = -1;\r\n  private page: Page;\r\n\r\n  private selectTab: ReturnType<typeof horizontalMenu>;\r\n  public pagesDiv: HTMLDivElement;\r\n  public scrollableDiv: HTMLElement;\r\n\r\n  constructor() {\r\n    this.pagesDiv = document.getElementById('auth-pages') as HTMLDivElement;\r\n    this.scrollableDiv = this.pagesDiv.querySelector('.scrollable') as HTMLElement;\r\n    this.selectTab = horizontalMenu(null, this.scrollableDiv.querySelector('.tabs-container') as HTMLDivElement, null, () => {\r\n      if(this.page?.onShown) {\r\n        this.page.onShown();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPage(page: Page) {\r\n    if(page.isAuthPage) {\r\n      this.pagesDiv.style.display = '';\r\n\r\n      let id = whichChild(page.pageEl);\r\n      if(this.pageId === id) return;\r\n\r\n      this.selectTab(id);\r\n\r\n      if(this.pageId !== -1 && id > 1) {\r\n        lottieLoader.loadLottieWorkers();\r\n      }\r\n\r\n\r\n\r\n      this.pageId = id;\r\n\r\n      if(this.scrollableDiv) {\r\n        fastSmoothScroll(this.scrollableDiv, this.scrollableDiv.firstElementChild as HTMLElement, 'start');\r\n      }\r\n    } else {\r\n      this.pagesDiv.style.display = 'none';\r\n      page.pageEl.style.display = '';\r\n\r\n      this.pageId = -1;\r\n    }\r\n\r\n    this.page = page;\r\n  }\r\n}\r\n\r\nconst pagesManager = new PagesManager();\r\nMOUNT_CLASS_TO.pagesManager = pagesManager;\r\nexport default pagesManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport pagesManager from \"./pagesManager\";\r\n\r\nexport default class Page {\r\n  public pageEl: HTMLDivElement;\r\n  private installed = false;\r\n\r\n  constructor(className: string, public isAuthPage: boolean, private onFirstMount?: (...args: any[]) => Promise<any> | void, private onMount?: (...args: any[]) => void, public onShown?: () => void) {\r\n    this.pageEl = document.body.querySelector('.' + className) as HTMLDivElement;\r\n  }\r\n\r\n  public async mount(...args: any[]) {\r\n    //this.pageEl.style.display = '';\r\n\r\n    if(this.onMount) {\r\n      this.onMount(...args);\r\n    }\r\n\r\n    if(!this.installed) {\r\n      if(this.onFirstMount) {\r\n        try {\r\n          const res = this.onFirstMount(...args);\r\n          if(res instanceof Promise) {\r\n            await res;\r\n          }\r\n        } catch(err) {\r\n          console.error('PAGE MOUNT ERROR:', err);\r\n        }\r\n      }\r\n      \r\n      this.installed = true;\r\n    }\r\n\r\n    pagesManager.setPage(this);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { RLottiePlayer } from \"../lib/lottieLoader\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { IS_SAFARI } from \"../environment/userAgent\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport isInDOM from \"../helpers/dom/isInDOM\";\r\n\r\nexport interface AnimationItem {\r\n  el: HTMLElement,\r\n  group: string,\r\n  animation: RLottiePlayer | HTMLVideoElement\r\n};\r\n\r\nexport class AnimationIntersector {\r\n  public observer: IntersectionObserver;\r\n  private visible: Set<AnimationItem> = new Set();\r\n\r\n  private byGroups: {[group: string]: AnimationItem[]} = {};\r\n  private lockedGroups: {[group: string]: true} = {};\r\n  private onlyOnePlayableGroup: string = '';\r\n  \r\n  private intersectionLockedGroups: {[group: string]: true} = {};\r\n  private videosLocked = false;\r\n\r\n  constructor() {\r\n    this.observer = new IntersectionObserver((entries) => {\r\n      if(rootScope.idle.isIDLE) return;\r\n\r\n      for(const entry of entries) {\r\n        const target = entry.target;\r\n\r\n        for(const group in this.byGroups) {\r\n          if(this.intersectionLockedGroups[group]) {\r\n            continue;\r\n          }\r\n\r\n          const player = this.byGroups[group].find(p => p.el === target);\r\n          if(player) {\r\n            if(entry.isIntersecting) {\r\n              this.visible.add(player);\r\n              this.checkAnimation(player, false);\r\n            } else {\r\n              this.visible.delete(player);\r\n              this.checkAnimation(player, true);\r\n\r\n              if(player.animation instanceof RLottiePlayer/*  && player.animation.cachingDelta === 2 */) {\r\n                //console.warn('will clear cache', player);\r\n                player.animation.clearCache();\r\n              }\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('audio_play', ({doc}) => {\r\n      if(doc.type === 'round') {\r\n        this.videosLocked = true;\r\n        this.checkAnimations();\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('audio_pause', () => {\r\n      if(this.videosLocked) {\r\n        this.videosLocked = false;\r\n        this.checkAnimations();\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAnimations(element: HTMLElement) {\r\n    const found: AnimationItem[] = [];\r\n    for(const group in this.byGroups) {\r\n      for(const player of this.byGroups[group]) {\r\n        if(player.el === element) {\r\n          found.push(player);\r\n        }\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n\r\n  public removeAnimation(player: AnimationItem) {\r\n    //console.log('destroy animation');\r\n    const {el, animation} = player;\r\n    animation.remove();\r\n\r\n    if(animation instanceof HTMLVideoElement && IS_SAFARI) {\r\n      setTimeout(() => { // TODO: очистка по очереди, а не все вместе с этим таймаутом\r\n        animation.src = '';\r\n        animation.load();\r\n      }, 1e3);\r\n    }\r\n\r\n    for(const group in this.byGroups) {\r\n      this.byGroups[group].findAndSplice(p => p === player);\r\n    }\r\n  \r\n    this.observer.unobserve(el);\r\n    this.visible.delete(player);\r\n  }\r\n\r\n  public addAnimation(animation: RLottiePlayer | HTMLVideoElement, group = '') {\r\n    const player = {\r\n      el: animation instanceof RLottiePlayer ? animation.el : animation, \r\n      animation: animation, \r\n      group\r\n    };\r\n\r\n    if(animation instanceof RLottiePlayer) {\r\n      if(!rootScope.settings.stickers.loop && animation.loop) {\r\n        animation.loop = rootScope.settings.stickers.loop;\r\n      }\r\n    }\r\n\r\n    (this.byGroups[group] ?? (this.byGroups[group] = [])).push(player);\r\n    this.observer.observe(player.el);\r\n  }\r\n\r\n  public checkAnimations(blurred?: boolean, group?: string, destroy = false) {\r\n    if(rootScope.idle.isIDLE) return;\r\n    \r\n    const groups = group /* && false */ ? [group] : Object.keys(this.byGroups);\r\n\r\n    if(group && !this.byGroups[group]) {\r\n      //console.warn('no animation group:', group);\r\n      this.byGroups[group] = [];\r\n      return;\r\n    }\r\n\r\n    for(const group of groups) {\r\n      const animations = this.byGroups[group];\r\n\r\n      animations.forEach(player => {\r\n        this.checkAnimation(player, blurred, destroy);\r\n      });\r\n    }\r\n  }\r\n\r\n  public checkAnimation(player: AnimationItem, blurred = false, destroy = false) {\r\n    const {el, animation, group} = player;\r\n    //return;\r\n    if((destroy || (!isInDOM(el) && !this.lockedGroups[group]))/*  && false */) {\r\n      this.removeAnimation(player);\r\n      return;\r\n    }\r\n\r\n    if(blurred || (this.onlyOnePlayableGroup && this.onlyOnePlayableGroup !== group) || (animation instanceof HTMLVideoElement && this.videosLocked)) {\r\n      if(!animation.paused) {\r\n        //console.warn('pause animation:', animation);\r\n        animation.pause();\r\n      }\r\n    } else if(animation.paused && \r\n      this.visible.has(player) && \r\n      animation.autoplay && \r\n      (!this.onlyOnePlayableGroup || this.onlyOnePlayableGroup === group)\r\n    ) {\r\n      //console.warn('play animation:', animation);\r\n      animation.play();\r\n    }\r\n  }\r\n\r\n  public setOnlyOnePlayableGroup(group: string) {\r\n    this.onlyOnePlayableGroup = group;\r\n  }\r\n\r\n  public lockGroup(group: string) {\r\n    this.lockedGroups[group] = true;\r\n  }\r\n\r\n  public unlockGroup(group: string) {\r\n    delete this.lockedGroups[group];\r\n    this.checkAnimations(undefined, group);\r\n  }\r\n\r\n  public refreshGroup(group: string) {\r\n    const animations = this.byGroups[group];\r\n    if(animations && animations.length) {\r\n      animations.forEach(animation => {\r\n        this.observer.unobserve(animation.el);\r\n      });\r\n\r\n      window.requestAnimationFrame(() => {\r\n        animations.forEach(animation => {\r\n          this.observer.observe(animation.el);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public lockIntersectionGroup(group: string) {\r\n    this.intersectionLockedGroups[group] = true;\r\n  }\r\n\r\n  public unlockIntersectionGroup(group: string) {\r\n    delete this.intersectionLockedGroups[group];\r\n    this.refreshGroup(group);\r\n  }\r\n}\r\n\r\nconst animationIntersector = new AnimationIntersector();\r\nif(MOUNT_CLASS_TO) {\r\n  MOUNT_CLASS_TO.animationIntersector = animationIntersector;\r\n}\r\nexport default animationIntersector;","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport function numberThousandSplitter(x: number, joiner = ' ') {\r\n  const parts = x.toString().split(\".\");\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, joiner);\r\n  return parts.join(\".\");\r\n}\r\n\r\nexport function formatBytes(bytes: number, decimals = 2) {\r\n  if(bytes === 0) return '0 Bytes';\r\n\r\n  const k = 1024;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n}\r\n\r\nexport function formatNumber(bytes: number, decimals = 2) {\r\n  if(bytes === 0) return '0';\r\n\r\n  const k = 1000;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['', 'K', 'M', 'B', 'T'];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\r\n}\r\n\r\nexport function clamp(v: number, min: number, max: number): number {\r\n  return v < min ? min : ((v > max) ? max : v);\r\n}\r\n\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's useHeavyAnimationCheck.ts, patched\r\n\r\nimport { AnyToVoidFunction } from '../types';\r\nimport ListenerSetter from '../helpers/listenerSetter';\r\nimport { CancellablePromise, deferredPromise } from '../helpers/cancellablePromise';\r\nimport rootScope from '../lib/rootScope';\r\nimport DEBUG from '../config/debug';\r\nimport { pause } from '../helpers/schedulers/pause';\r\n\r\nconst ANIMATION_START_EVENT = 'event-heavy-animation-start';\r\nconst ANIMATION_END_EVENT = 'event-heavy-animation-end';\r\n\r\nlet isAnimating = false;\r\nlet heavyAnimationPromise: CancellablePromise<void> = deferredPromise<void>();\r\nlet promisesInQueue = 0;\r\n\r\nheavyAnimationPromise.resolve();\r\n\r\nconst log = console.log.bind(console.log, '[HEAVY-ANIMATION]:');\r\n\r\nexport function dispatchHeavyAnimationEvent(promise: Promise<any>, timeout?: number) {\r\n  if(!isAnimating) {\r\n    heavyAnimationPromise = deferredPromise<void>();\r\n    rootScope.dispatchEvent(ANIMATION_START_EVENT);\r\n    isAnimating = true;\r\n    DEBUG && log('start');\r\n  }\r\n  \r\n  ++promisesInQueue;\r\n  DEBUG && log('attach promise, length:', promisesInQueue, timeout);\r\n\r\n  const promises = [\r\n    timeout !== undefined ? pause(timeout) : undefined,\r\n    promise.finally(() => {})\r\n  ].filter(Boolean);\r\n\r\n  const perf = performance.now();\r\n  const _heavyAnimationPromise = heavyAnimationPromise;\r\n  Promise.race(promises).then(() => {\r\n    if(heavyAnimationPromise !== _heavyAnimationPromise || heavyAnimationPromise.isFulfilled) { // interrupted\r\n      return;\r\n    }\r\n\r\n    --promisesInQueue;\r\n    DEBUG && log('promise end, length:', promisesInQueue, performance.now() - perf);\r\n    if(promisesInQueue <= 0) {\r\n      onHeavyAnimationEnd();\r\n    }\r\n  });\r\n\r\n  return heavyAnimationPromise;\r\n}\r\n\r\nfunction onHeavyAnimationEnd() {\r\n  if(heavyAnimationPromise.isFulfilled) {\r\n    return;\r\n  }\r\n\r\n  isAnimating = false;\r\n  promisesInQueue = 0;\r\n  rootScope.dispatchEvent(ANIMATION_END_EVENT);\r\n  heavyAnimationPromise.resolve();\r\n\r\n  DEBUG && log('end');\r\n}\r\n\r\nexport function interruptHeavyAnimation() {\r\n  onHeavyAnimationEnd();\r\n}\r\n\r\nexport function getHeavyAnimationPromise() {\r\n  return heavyAnimationPromise;\r\n}\r\n\r\nexport default function(\r\n  handleAnimationStart: AnyToVoidFunction,\r\n  handleAnimationEnd: AnyToVoidFunction,\r\n  listenerSetter?: ListenerSetter\r\n) {\r\n  //useEffect(() => {\r\n    if(isAnimating) {\r\n      handleAnimationStart();\r\n    }\r\n\r\n    const add = listenerSetter ? listenerSetter.add(rootScope) : rootScope.addEventListener.bind(rootScope);\r\n    const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, rootScope) : rootScope.removeEventListener.bind(rootScope);\r\n    add(ANIMATION_START_EVENT, handleAnimationStart);\r\n    add(ANIMATION_END_EVENT, handleAnimationEnd);\r\n\r\n    return () => {\r\n      remove(ANIMATION_END_EVENT, handleAnimationEnd);\r\n      remove(ANIMATION_START_EVENT, handleAnimationStart);\r\n    };\r\n  //}, [handleAnimationEnd, handleAnimationStart]);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function whichChild(elem: Node) {\r\n  if(!elem.parentNode) {\r\n    return -1;\r\n  }\r\n  \r\n  let i = 0;\r\n  // @ts-ignore\r\n  while((elem = elem.previousElementSibling) !== null) ++i;\r\n  return i;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's fastSmoothScroll slightly patched\r\n\r\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\r\nimport { fastRaf } from './schedulers';\r\nimport { animateSingle, cancelAnimationByKey } from './animation';\r\nimport rootScope from '../lib/rootScope';\r\nimport isInDOM from './dom/isInDOM';\r\n\r\nconst MAX_DISTANCE = 1500;\r\nconst MIN_JS_DURATION = 250;\r\nconst MAX_JS_DURATION = 600;\r\n\r\nexport enum FocusDirection {\r\n  Up,\r\n  Down,\r\n  Static,\r\n};\r\n\r\nexport default function fastSmoothScroll(\r\n  container: HTMLElement,\r\n  element: HTMLElement,\r\n  position: ScrollLogicalPosition,\r\n  margin = 0,\r\n  maxDistance = MAX_DISTANCE,\r\n  forceDirection?: FocusDirection,\r\n  forceDuration?: number,\r\n  axis: 'x' | 'y' = 'y'\r\n) {\r\n  //return;\r\n\r\n  if(!rootScope.settings.animationsEnabled) {\r\n    forceDirection = FocusDirection.Static;\r\n  }\r\n\r\n  if(forceDirection === FocusDirection.Static) {\r\n    forceDuration = 0;\r\n    return scrollWithJs(container, element, position, margin, forceDuration, axis);\r\n    /* return Promise.resolve();\r\n\r\n    element.scrollIntoView({ block: position });\r\n\r\n    cancelAnimationByKey(container);\r\n    return Promise.resolve(); */\r\n  }\r\n\r\n  if(axis === 'y' && element !== container && isInDOM(element) && container.getBoundingClientRect) {\r\n    const elementRect = element.getBoundingClientRect();\r\n    const containerRect = container.getBoundingClientRect();\r\n  \r\n    const offsetTop = elementRect.top - containerRect.top;\r\n    if(forceDirection === undefined) {\r\n      if(offsetTop < -maxDistance) {\r\n        container.scrollTop += (offsetTop + maxDistance);\r\n      } else if(offsetTop > maxDistance) {\r\n        container.scrollTop += (offsetTop - maxDistance);\r\n      }\r\n    } else if(forceDirection === FocusDirection.Up) { // * not tested yet\r\n      container.scrollTop = offsetTop + container.scrollTop + maxDistance;\r\n    } else if(forceDirection === FocusDirection.Down) { // * not tested yet\r\n      container.scrollTop = Math.max(0, offsetTop + container.scrollTop - maxDistance);\r\n    }\r\n    /* const { offsetTop } = element;\r\n\r\n    if(forceDirection === undefined) {\r\n      const offset = offsetTop - container.scrollTop;\r\n\r\n      if(offset < -maxDistance) {\r\n        container.scrollTop += (offset + maxDistance);\r\n      } else if(offset > maxDistance) {\r\n        container.scrollTop += (offset - maxDistance);\r\n      }\r\n    } else if(forceDirection === FocusDirection.Up) {\r\n      container.scrollTop = offsetTop + maxDistance;\r\n    } else if(forceDirection === FocusDirection.Down) {\r\n      container.scrollTop = Math.max(0, offsetTop - maxDistance);\r\n    } */\r\n  }\r\n\r\n  const promise = new Promise((resolve) => {\r\n    fastRaf(() => {\r\n      scrollWithJs(container, element, position, margin, forceDuration, axis)\r\n      .then(resolve);\r\n    });\r\n  });\r\n\r\n  return axis === 'y' ? dispatchHeavyAnimationEvent(promise) : promise;\r\n}\r\n\r\nfunction scrollWithJs(\r\n  container: HTMLElement, element: HTMLElement, position: ScrollLogicalPosition, margin = 0, forceDuration?: number, axis: 'x' | 'y' = 'y'\r\n) {\r\n  if(!isInDOM(element)) {\r\n    cancelAnimationByKey(container);\r\n    return Promise.resolve();\r\n  }\r\n  \r\n  const rectStartKey = axis === 'y' ? 'top' : 'left';\r\n  const rectEndKey = axis === 'y' ? 'bottom' : 'right';\r\n  const sizeKey = axis === 'y' ? 'height' : 'width';\r\n  const scrollSizeKey = axis === 'y' ? 'scrollHeight' : 'scrollWidth';\r\n  const scrollPositionKey = axis === 'y' ? 'scrollTop' : 'scrollLeft';\r\n\r\n  //const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\r\n  const elementRect = element.getBoundingClientRect();\r\n  const containerRect = container.getBoundingClientRect ? container.getBoundingClientRect() : document.body.getBoundingClientRect();\r\n\r\n  //const transformable = container.firstElementChild as HTMLElement;\r\n\r\n  const elementPosition = elementRect[rectStartKey] - containerRect[rectStartKey];\r\n  const elementSize = element[scrollSizeKey]; // margin is exclusive in DOMRect\r\n\r\n  const containerSize = containerRect[sizeKey];\r\n\r\n  const scrollPosition = container[scrollPositionKey];\r\n  const scrollSize = container[scrollSizeKey];\r\n  /* const elementPosition = element.offsetTop;\r\n  const elementSize = element.offsetHeight;\r\n\r\n  const scrollPosition = container[scrollPositionKey];\r\n  const scrollSize = container[scrollSizeKey];\r\n  const containerSize = container.offsetHeight; */\r\n\r\n  let path!: number;\r\n\r\n  switch(position) {\r\n    case 'start':\r\n      path = elementPosition - margin;\r\n      break;\r\n    case 'end':\r\n      path = elementRect[rectEndKey] + (elementSize - elementRect[sizeKey]) - containerRect[rectEndKey];\r\n      break;\r\n    // 'nearest' is not supported yet\r\n    case 'nearest':\r\n    case 'center':\r\n      path = elementSize < containerSize\r\n        ? (elementPosition + elementSize / 2) - (containerSize / 2)\r\n        : elementPosition - margin;\r\n      break;\r\n  }\r\n  /* switch (position) {\r\n    case 'start':\r\n      path = (elementPosition - margin) - scrollPosition;\r\n      break;\r\n    case 'end':\r\n      path = (elementPosition + elementSize + margin) - (scrollPosition + containerSize);\r\n      break;\r\n    // 'nearest' is not supported yet\r\n    case 'nearest':\r\n    case 'center':\r\n      path = elementSize < containerSize\r\n        ? (elementPosition + elementSize / 2) - (scrollPosition + containerSize / 2)\r\n        : (elementPosition - margin) - scrollPosition;\r\n      break;\r\n  } */\r\n\r\n  // console.log('scrollWithJs: will scroll path:', path, element);\r\n\r\n  /* let existsTransform = 0;\r\n  const currentTransform = transformable.style.transform;\r\n  if(currentTransform) {\r\n    existsTransform = parseInt(currentTransform.match(/\\((.+?), (.+?), .+\\)/)[2]);\r\n    //path += existsTransform;\r\n  } */\r\n\r\n  if(path < 0) {\r\n    const remainingPath = -scrollPosition;\r\n    path = Math.max(path, remainingPath);\r\n  } else if(path > 0) {\r\n    const remainingPath = scrollSize - (scrollPosition + containerSize);\r\n    path = Math.min(path, remainingPath);\r\n  }\r\n\r\n  const target = container[scrollPositionKey] + path;\r\n  const duration = forceDuration ?? (\r\n    MIN_JS_DURATION + (Math.abs(path) / MAX_DISTANCE) * (MAX_JS_DURATION - MIN_JS_DURATION)\r\n  );\r\n  const startAt = Date.now();\r\n\r\n  /* transformable.classList.add('no-transition');\r\n\r\n  const tickTransform = () => {\r\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\r\n    const currentPath = path * transition(t);\r\n\r\n    transformable.style.transform = `translate3d(0, ${-currentPath}px, 0)`;\r\n    container.dataset.translate = '' + -currentPath;\r\n\r\n    const willContinue = t < 1;\r\n    if(!willContinue) {\r\n      fastRaf(() => {\r\n        delete container.dataset.transform;\r\n        container.dataset.transform = '';\r\n        transformable.style.transform = '';\r\n        void transformable.offsetLeft; // reflow\r\n        transformable.classList.remove('no-transition');\r\n        void transformable.offsetLeft; // reflow\r\n        container[scrollPositionKey] = Math.round(target);\r\n      });\r\n    }\r\n\r\n    return willContinue;\r\n  };\r\n  \r\n  return animateSingle(tickTransform, container); */\r\n\r\n  /* return new Promise((resolve) => {\r\n    fastRaf(() => {\r\n      transformable.style.transform = '';\r\n      transformable.style.transition = '';\r\n\r\n      setTimeout(resolve, duration);\r\n    });\r\n  });\r\n\r\n  const transformableHeight = transformable.scrollHeight;\r\n  //transformable.style.minHeight = `${transformableHeight}px`;\r\n  */\r\n\r\n  const tick = () => {\r\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\r\n\r\n    const currentPath = path * (1 - transition(t));\r\n    container[scrollPositionKey] = Math.round(target - currentPath);\r\n    \r\n    return t < 1;\r\n  };\r\n\r\n  if(!duration || !path) {\r\n    cancelAnimationByKey(container);\r\n    tick();\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /* return new Promise((resolve) => {\r\n    setTimeout(resolve, duration);\r\n  }).then(() => {\r\n    transformable.classList.add('no-transition');\r\n    void transformable.offsetLeft; // reflow\r\n    transformable.style.transform = '';\r\n    transformable.style.transition = '';\r\n    void transformable.offsetLeft; // reflow\r\n    transformable.classList.remove('no-transition');\r\n    void transformable.offsetLeft; // reflow\r\n    fastRaf(() => {\r\n      \r\n      container[scrollPositionKey] = Math.round(target);\r\n      //transformable.style.minHeight = ``;\r\n    });\r\n    \r\n  }); */\r\n\r\n  return animateSingle(tick, container);\r\n}\r\n\r\nfunction transition(t: number) {\r\n  return 1 - ((1 - t) ** 3.5);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAsChild(el: any, parent: any) {\r\n  if(el.parentElement === parent) return el;\r\n  \r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.parentElement === parent) {\r\n      return el;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n"],"sourceRoot":""}